@using Enums

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">BlazorAppServer</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <MudPaper Width="250px" Style="background-color:transparent; color:white;font-size: 12px;"  Class="d-inline-flex py-3" Elevation="1">
        <MudNavMenu Class="mud-width-full">
            <MudText Typo="Typo.h6" Class="px-4">Навигация</MudText>
            <MudDivider Class="my-2" />
            <MudNavLink Href="/" Icon="@Icons.Material.Filled.Dashboard">Главная страница</MudNavLink>
            <MudNavGroup Title="Каталог файлов" HideExpandIcon="false" Icon="@Icons.Material.Filled.Settings">
                 @foreach (var item in CategoriesList)
                {
                    <a href="/load/@item.Value">
                        <MudNavGroup Style="color:white;font-size:11px;" Title="@item.Key" HideExpandIcon="true" Icon="@Icons.Material.Filled.AdminPanelSettings" IconColor="Color.Dark"></MudNavGroup>
                </a>
                }
            </MudNavGroup>
        </MudNavMenu>
    </MudPaper>
</div>

@code {

    Dictionary<string, string> CategoriesList = Enum.GetValues(typeof(Categories))
          .Cast<Categories>()
          .ToDictionary(
              x => EnumHelper.GetDescription(x),
              x => EnumHelper.GetUrlSlug(x)
          );

    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
